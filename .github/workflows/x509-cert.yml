name: x509-cert

on:
  pull_request:
    paths:
      - ".github/workflows/x509-cert.yml"
      - "const-oid/**"
      - "der/**"
      - "spki/**"
      - "x509-cert/**"
      - "Cargo.*"
  push:
    branches: master

defaults:
  run:
    working-directory: x509-cert

env:
  CARGO_INCREMENTAL: 0
  RUSTFLAGS: "-Dwarnings"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - 1.65.0 # MSRV
          - stable
        target:
          - thumbv7em-none-eabi
          - wasm32-unknown-unknown
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          targets: ${{ matrix.target }}
      - uses: RustCrypto/actions/cargo-hack-install@master
      - run: cargo hack build --target ${{ matrix.target }} --feature-powerset --exclude-features arbitrary,default,std

  minimal-versions:
    with:
        working-directory: ${{ github.workflow }}
    steps:
      - *install-zlint
      - uses: RustCrypto/actions/.github/workflows/minimal-versions.yml@master

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - 1.65.0 # MSRV
          - stable
    steps:
      - uses: actions/checkout@v3
      
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
      - uses: RustCrypto/actions/cargo-hack-install@master
      - name: Install zlint &install-zlint
        run: |
          wget -O /tmp/zlint.tar.gz https://github.com/zmap/zlint/releases/download/v3.4.1/zlint_3.4.1_Linux_x86_64.tar.gz
          tar -C /tmp/ -zxf /tmp/zlint.tar.gz --strip-components 1
          mv /tmp/zlint ${RUNNER_TOOL_CACHE}
          echo "${RUNNER_TOOL_CACHE}" >> $GITHUB_PATH
      - run: cargo hack test --feature-powerset

  fuzz:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@nightly
      - run: cargo install cargo-fuzz
      - run: cargo fuzz run certreq -- -max_total_time=30 -seed_inputs="fuzz/inputs/rsa2048-csr.der"
      - run: cargo fuzz run certreqinfo -- -max_total_time=30
